{"ast":null,"code":"/**\r\n * Coordinate addition\r\n * @param a The first coordinate\r\n * @param b The second coordinate\r\n */\nexport function add(a, b) {\n  return {\n    x: a.x + b.x,\n    y: a.y + b.y\n  };\n}\n/**\r\n * Coordinate subtraction\r\n * @param a The first coordinate\r\n * @param b The second coordinate\r\n */\n\nexport function subtract(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\n/**\r\n * Returns the cartesian distance of the drag source component's position, based on its position\r\n * at the time when the current drag operation has started, and the movement difference.\r\n *\r\n * Returns null if no item is being dragged.\r\n *\r\n * @param state The offset state to compute from\r\n */\n\nexport function getSourceClientOffset(state) {\n  var clientOffset = state.clientOffset,\n      initialClientOffset = state.initialClientOffset,\n      initialSourceClientOffset = state.initialSourceClientOffset;\n\n  if (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n    return null;\n  }\n\n  return subtract(add(clientOffset, initialSourceClientOffset), initialClientOffset);\n}\n/**\r\n * Determines the x,y offset between the client offset and the initial client offset\r\n *\r\n * @param state The offset state to compute from\r\n */\n\nexport function getDifferenceFromInitialOffset(state) {\n  var clientOffset = state.clientOffset,\n      initialClientOffset = state.initialClientOffset;\n\n  if (!clientOffset || !initialClientOffset) {\n    return null;\n  }\n\n  return subtract(clientOffset, initialClientOffset);\n}","map":{"version":3,"names":["add","a","b","x","y","subtract","getSourceClientOffset","state","clientOffset","initialClientOffset","initialSourceClientOffset","getDifferenceFromInitialOffset"],"sources":["C:/Users/user/Documents/GIEPS-Project/gogetit-ieps-frontend/node_modules/dnd-core/dist/esm/utils/coords.js"],"sourcesContent":["/**\r\n * Coordinate addition\r\n * @param a The first coordinate\r\n * @param b The second coordinate\r\n */\r\nexport function add(a, b) {\r\n  return {\r\n    x: a.x + b.x,\r\n    y: a.y + b.y\r\n  };\r\n}\r\n/**\r\n * Coordinate subtraction\r\n * @param a The first coordinate\r\n * @param b The second coordinate\r\n */\r\n\r\nexport function subtract(a, b) {\r\n  return {\r\n    x: a.x - b.x,\r\n    y: a.y - b.y\r\n  };\r\n}\r\n/**\r\n * Returns the cartesian distance of the drag source component's position, based on its position\r\n * at the time when the current drag operation has started, and the movement difference.\r\n *\r\n * Returns null if no item is being dragged.\r\n *\r\n * @param state The offset state to compute from\r\n */\r\n\r\nexport function getSourceClientOffset(state) {\r\n  var clientOffset = state.clientOffset,\r\n      initialClientOffset = state.initialClientOffset,\r\n      initialSourceClientOffset = state.initialSourceClientOffset;\r\n\r\n  if (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\r\n    return null;\r\n  }\r\n\r\n  return subtract(add(clientOffset, initialSourceClientOffset), initialClientOffset);\r\n}\r\n/**\r\n * Determines the x,y offset between the client offset and the initial client offset\r\n *\r\n * @param state The offset state to compute from\r\n */\r\n\r\nexport function getDifferenceFromInitialOffset(state) {\r\n  var clientOffset = state.clientOffset,\r\n      initialClientOffset = state.initialClientOffset;\r\n\r\n  if (!clientOffset || !initialClientOffset) {\r\n    return null;\r\n  }\r\n\r\n  return subtract(clientOffset, initialClientOffset);\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;EACxB,OAAO;IACLC,CAAC,EAAEF,CAAC,CAACE,CAAF,GAAMD,CAAC,CAACC,CADN;IAELC,CAAC,EAAEH,CAAC,CAACG,CAAF,GAAMF,CAAC,CAACE;EAFN,CAAP;AAID;AACD;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,QAAT,CAAkBJ,CAAlB,EAAqBC,CAArB,EAAwB;EAC7B,OAAO;IACLC,CAAC,EAAEF,CAAC,CAACE,CAAF,GAAMD,CAAC,CAACC,CADN;IAELC,CAAC,EAAEH,CAAC,CAACG,CAAF,GAAMF,CAAC,CAACE;EAFN,CAAP;AAID;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,qBAAT,CAA+BC,KAA/B,EAAsC;EAC3C,IAAIC,YAAY,GAAGD,KAAK,CAACC,YAAzB;EAAA,IACIC,mBAAmB,GAAGF,KAAK,CAACE,mBADhC;EAAA,IAEIC,yBAAyB,GAAGH,KAAK,CAACG,yBAFtC;;EAIA,IAAI,CAACF,YAAD,IAAiB,CAACC,mBAAlB,IAAyC,CAACC,yBAA9C,EAAyE;IACvE,OAAO,IAAP;EACD;;EAED,OAAOL,QAAQ,CAACL,GAAG,CAACQ,YAAD,EAAeE,yBAAf,CAAJ,EAA+CD,mBAA/C,CAAf;AACD;AACD;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,8BAAT,CAAwCJ,KAAxC,EAA+C;EACpD,IAAIC,YAAY,GAAGD,KAAK,CAACC,YAAzB;EAAA,IACIC,mBAAmB,GAAGF,KAAK,CAACE,mBADhC;;EAGA,IAAI,CAACD,YAAD,IAAiB,CAACC,mBAAtB,EAA2C;IACzC,OAAO,IAAP;EACD;;EAED,OAAOJ,QAAQ,CAACG,YAAD,EAAeC,mBAAf,CAAf;AACD"},"metadata":{},"sourceType":"module"}
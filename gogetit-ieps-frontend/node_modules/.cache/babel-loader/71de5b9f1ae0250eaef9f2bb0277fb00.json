{"ast":null,"code":"var _jsxFileName = \"/home/victor/Documents/junior/GIEPS-Project/gogetit-ieps-frontend/src/pages/dashboard/Dashboard.js\";\n// import React, { useState } from \"react\";\nimport \"@material-ui/core\"; // import { useTheme } from \"@material-ui/styles\";\n\nimport \"recharts\"; // styles\n// import useStyles from \"./styles\";\n// components\n// import mock from \"./mock\";\n// import Widget from \"../../components/Widget\";\n\nimport PageTitle from \"../../components/PageTitle\"; // import { Typography } from \"../../components/Wrappers\";\n// import Dot from \"../../components/Sidebar/components/Dot\";\n// import Table from \"./components/Table/Table\";\n// import BigStat from \"./components/BigStat/BigStat\";\n// const mainChartData = getMainChartData();\n// const PieChartData = [\n//   { name: \"Group A\", value: 400, color: \"primary\" },\n//   { name: \"Group B\", value: 300, color: \"secondary\" },\n//   { name: \"Group C\", value: 300, color: \"warning\" },\n//   { name: \"Group D\", value: 200, color: \"success\" },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard(props) {\n  // var classes = useStyles();\n  // var theme = useTheme();\n  // local\n  // var [mainChartState, setMainChartState] = useState(\"monthly\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PageTitle, {\n      title: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // #######################################################################\n// function getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n//   var array = new Array(length).fill();\n//   let lastValue;\n//   return array.map((item, index) => {\n//     let randomValue = Math.floor(Math.random() * multiplier + 1);\n//     while (\n//       randomValue <= min ||\n//       randomValue >= max ||\n//       (lastValue && randomValue - lastValue > maxDiff)\n//     ) {\n//       randomValue = Math.floor(Math.random() * multiplier + 1);\n//     }\n//     lastValue = randomValue;\n//     return { value: randomValue };\n//   });\n// }\n// function getMainChartData() {\n//   var resultArray = [];\n//   var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n//   var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n//   var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n//   for (let i = 0; i < tablet.length; i++) {\n//     resultArray.push({\n//       tablet: tablet[i].value,\n//       desktop: desktop[i].value,\n//       mobile: mobile[i].value,\n//     });\n//   }\n//   return resultArray;\n// }\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["PageTitle","Dashboard","props"],"sources":["/home/victor/Documents/junior/GIEPS-Project/gogetit-ieps-frontend/src/pages/dashboard/Dashboard.js"],"sourcesContent":["// import React, { useState } from \"react\";\nimport {\n  // Grid,\n  // LinearProgress,\n  // Select,\n  // OutlinedInput,\n  // MenuItem,\n  // Button\n} from \"@material-ui/core\";\n// import { useTheme } from \"@material-ui/styles\";\nimport {\n  // ResponsiveContainer,\n  // ComposedChart,\n  // AreaChart,\n  // LineChart,\n  // Line,\n  // Area,\n  // PieChart,\n  // Pie,\n  // Cell,\n  // YAxis,\n  // XAxis,\n} from \"recharts\";\n\n// styles\n// import useStyles from \"./styles\";\n\n// components\n// import mock from \"./mock\";\n// import Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\n// import { Typography } from \"../../components/Wrappers\";\n// import Dot from \"../../components/Sidebar/components/Dot\";\n// import Table from \"./components/Table/Table\";\n// import BigStat from \"./components/BigStat/BigStat\";\n\n// const mainChartData = getMainChartData();\n// const PieChartData = [\n//   { name: \"Group A\", value: 400, color: \"primary\" },\n//   { name: \"Group B\", value: 300, color: \"secondary\" },\n//   { name: \"Group C\", value: 300, color: \"warning\" },\n//   { name: \"Group D\", value: 200, color: \"success\" },\n// ];\n\nexport default function Dashboard(props) {\n  // var classes = useStyles();\n  // var theme = useTheme();\n\n  // local\n  // var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n  return (\n    <>\n      <PageTitle title=\"Dashboard\"/>\n\n    </>\n  );\n}\n\n// #######################################################################\n// function getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n//   var array = new Array(length).fill();\n//   let lastValue;\n\n//   return array.map((item, index) => {\n//     let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n//     while (\n//       randomValue <= min ||\n//       randomValue >= max ||\n//       (lastValue && randomValue - lastValue > maxDiff)\n//     ) {\n//       randomValue = Math.floor(Math.random() * multiplier + 1);\n//     }\n\n//     lastValue = randomValue;\n\n//     return { value: randomValue };\n//   });\n// }\n\n// function getMainChartData() {\n//   var resultArray = [];\n//   var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n//   var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n//   var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n//   for (let i = 0; i < tablet.length; i++) {\n//     resultArray.push({\n//       tablet: tablet[i].value,\n//       desktop: desktop[i].value,\n//       mobile: mobile[i].value,\n//     });\n//   }\n\n//   return resultArray;\n// }\n"],"mappings":";AAAA;AACA,OAOO,mBAPP,C,CAQA;;AACA,OAYO,UAZP,C,CAcA;AACA;AAEA;AACA;AACA;;AACA,OAAOA,SAAP,MAAsB,4BAAtB,C,CACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EACvC;EACA;EAEA;EACA;EAEA,oBACE;IAAA,uBACE,QAAC,SAAD;MAAW,KAAK,EAAC;IAAjB;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAMD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;KApDwBD,S"},"metadata":{},"sourceType":"module"}